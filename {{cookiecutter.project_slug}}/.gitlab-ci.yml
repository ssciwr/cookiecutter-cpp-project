variables:
{%- if cookiecutter.use_submodules == "Yes" %}
  GIT_SUBMODULE_STRATEGY: recursive
{%- else %}
  CATCH2_VERSION: {{ cookiecutter._catch_version }}
{%- if cookiecutter.python_bindings == "Yes" %}
  PYBIND11_VERSION: {{ cookiecutter._pybind_version }}
{%- endif %}
{%- endif %}

.template: &template
  before_script:
    - echo "Installing potential dependencies..."
{% if cookiecutter.python_bindings == "Yes" and cookiecutter.use_submodules == "No" %}
    - git clone -b v$PYBIND11_VERSION https://github.com/pybind/pybind11.git
    - cd pybind11
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF ..
    - sudo make install
    - cd ../..
{%- endif %}
{% if cookiecutter.use_submodules == "No" %}
    - git clone -b v$CATCH2_VERSION https://github.com/catchorg/Catch2.git
    - cd Catch2
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF ..
    - sudo make install
    - cd ../..
{%- endif %}
  script:
    - cmake -E make_directory build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_DOCS=OFF ..
    - cmake --build .
    - ctest

build-and-test:gcc:
  # Note: You can use your own Docker images here that e.g. include relevant
  #       dependencies and development tools. We choose images provided by conan
  #       as these are well maintained and try to provide a good C++ developement
  #       environment with both gcc and clang. For more information, see here:
  #       https://github.com/conan-io/conan-docker-tools
  image: conanio/gcc11
  <<: *template

build-and-test:clang:
  image: conanio/clang11
  <<: *template

{% if cookiecutter.codecovio == "Yes" -%}
generate-coverage-report:
  image: conanio/gcc7
  <<: *template
  script:
    - sudo apt-get update
    - sudo apt-get install -yy lcov
    - cmake -E make_directory build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" -DBUILD_DOCS=OFF ..
    - cmake --build .
    - ctest
    - cd ..
    - lcov --directory ./build{% if cookiecutter.header_only == "No" %}/src{% endif %} --capture --output-file coverage.info
    - bash <(curl --connect-timeout 10 --retry 5 -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
{%- endif %}
